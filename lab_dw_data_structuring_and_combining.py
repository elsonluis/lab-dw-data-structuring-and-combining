# -*- coding: utf-8 -*-
"""lab-dw-data-structuring-and-combining.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fpAG3Magtsvv1ccKU_-3PQxVzi0ido2-

# Lab | Data Structuring and Combining Data

For Challenge 1, you can either use data which has already been cleaned (option 1) or clean it yourself (option 2).

## Challenge 1: Combining Data (Option 1)
"""

import pandas as pm

pm = pd.read_csv("https://raw.githubusercontent.com/data-bootcamp-v4/data/main/file1.csv")
pm.head()

pm.columns

"""## Challenge 1: Combining & Cleaning Data (Option 2)

If in the previous lab you created your cleaning and formatting function, or if you want to do it now, instead of using the two clean files provided above, you can use your function to clean and format the data in these two raw files below:

- https://raw.githubusercontent.com/data-bootcamp-v4/data/main/file2.csv
- https://raw.githubusercontent.com/data-bootcamp-v4/data/main/file3.csv

Observation:
- One option is to first combine the three datasets and then apply the cleaning function to the new combined dataset
- Another option would be to read the clean file you saved in the previous lab, and just clean the two new files and concatenate the three clean datasets
"""

import pandas as pd
import pandas as pl

pf = pd.read_csv("https://raw.githubusercontent.com/data-bootcamp-v4/data/main/file2.csv")
pf.head()

pn = pl.read_csv("https://raw.githubusercontent.com/data-bootcamp-v4/data/main/file3.csv")
pn.head()

pf.columns

pn.columns

#Combine the data from the three dataframes into a single dataframe, named "customer_data"

customer_data = pd.concat([pn, pf, pm], axis = 0)
customer_data

customer_data.drop

customer_data.head()

customer_data.columns

"""# Challenge 2: Structuring Data

In this challenge, we will continue to work with customer data from an insurance company, but we will use a dataset with more columns, called marketing_customer_analysis.csv, which can be found at the following link:

https://raw.githubusercontent.com/data-bootcamp-v4/data/main/marketing_customer_analysis_clean.csv

This dataset contains information such as customer demographics, policy details, vehicle information, and the customer's response to the last marketing campaign. Our goal is to explore and analyze this data by performing data cleaning, formatting, and structuring.
"""

# Your code goes here

mk = pd.read_csv("https://raw.githubusercontent.com/data-bootcamp-v4/data/main/marketing_customer_analysis_clean.csv")
mk

"""1. You work at the marketing department and you want to know which sales channel brought the most sales in terms of total revenue. Using pivot, create a summary table showing the total revenue for each sales channel (branch, call center, web, and mail).
Round the total revenue to 2 decimal points.  Analyze the resulting table to draw insights.
"""

#df.pivot_table(index = "sales_channel", columns = "number_of_policies",values = ["total_claim_amount"])

result = mk.pivot_table(values= ["total_claim_amount"], index="sales_channel", aggfunc='sum', fill_value=0)
result["total_claim_amount"]= result["total_claim_amount"].round(2)
result

"""2. Create a pivot table that shows the average customer lifetime value per gender and education level. Analyze the resulting table to draw insights."""

#p.table
result1 = mk.pivot_table(values = ["customer_lifetime_value"], index = "gender",columns = "education", aggfunc = "mean", fill_value =0)
result1

"""## Bonus

You work at the customer service department and you want to know which months had the highest number of complaints by policy type category. Create a summary table showing the number of complaints by policy type and month.
Show it in a long format table.

*In data analysis, a long format table is a way of structuring data in which each observation or measurement is stored in a separate row of the table. The key characteristic of a long format table is that each column represents a single variable, and each row represents a single observation of that variable.*

*More information about long and wide format tables here: https://www.statology.org/long-vs-wide-data/*
"""

# Your code goes here